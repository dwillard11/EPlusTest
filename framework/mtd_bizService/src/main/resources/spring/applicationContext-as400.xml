<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
 	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- configurations -->
		<property name="initialSize" value="3" />
		<property name="maxActive" value="100" />
		<!--  <property name="maxIdle" value="30" /> deprecated-->
		<property name="minIdle" value="3" />
		<property name="maxWait" value="10000" /> 
		<property name="poolPreparedStatements" value="true" />
        <property name="removeAbandoned"><value>true</value></property>
        <property name="removeAbandonedTimeout"><value>180</value></property>
		<property name="testWhileIdle"><value>true</value></property> 
        <property name="testOnBorrow"><value>false</value></property>
        <property name="testOnReturn"><value>false</value></property>
        <property name="validationQuery"><value>SELECT 1 FROM SYSIBM.SYSDUMMY1</value></property>
        <!-- using VPN connection, timeout set to 10 seconds -->
        <property name="validationQueryTimeout"><value>10</value></property>
        <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
        <property name="numTestsPerEvictionRun"><value>100</value></property>
        <property name="minEvictableIdleTimeMillis"><value>200000</value></property>
		
	</bean>	
	
	

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="txDefinition"
		class="org.springframework.transaction.support.DefaultTransactionDefinition">
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"></property>
	</bean>

	
	<tx:annotation-driven  transaction-manager="transactionManager"/>
   
   <!-- multiple database support -->
	<bean id="vendorProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="SQL Server">sqlserver</prop>
				<prop key="DB2">db2</prop>
				<prop key="Oracle">oracle</prop>
				<prop key="MySQL">mysql</prop>
			</props>
		</property>
	</bean>
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties" ref="vendorProperties" />
	</bean>
	<!-- Mybatis Session Factory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="databaseIdProvider" ref="databaseIdProvider" />
		<property name="configLocation" value="classpath:mybatis/configuration.xml" />
		<property name="typeAliasesPackage" value="ca.manitoulin.mtd.dto">
		</property>
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="ca.manitoulin.*.dao" />
	</bean> 

</beans>
